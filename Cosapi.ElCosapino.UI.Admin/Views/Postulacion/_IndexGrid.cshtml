@using Newtonsoft.Json
@using Cosapi.ElCosapino.CrossCutting.Util
@using Cosapi.ElCosapino.Dominio.Security.Aggregates.LoginAgg
@using Cosapi.ElCosapino.Dominio.Security.Aggregates.PostulacionAgg
@{
    var Permisos = (List<PermisoUsuario>)Session[Constantes.SessionKey.USERPERMISSIONS];
    Permisos = (Permisos ?? new List<PermisoUsuario>());
}
@{
    var grid = new CanvasGrid<PostulacionBE>("GridPostulacion", Model) { callBackMethod = "GridPostulacionReload", tableHtmlAttributes = new { @class = "Grid" } };
    grid.columnCollection.addColumn(_headerText: "Fecha Postulación", _filterKey: "S_FechaRegistro", _format: item => item.FechaPostulacion);
    grid.columnCollection.addColumn(_headerText: "ID", _filterKey: "S_PostulacionId", _format: item => item.PostulacionId);
    grid.columnCollection.addColumn(_headerText: "Categoría", _filterKey: "S_Categoria", _format: item => item.Categoria);
    grid.columnCollection.addColumn(_headerText: "Especialidad", _filterKey: "S_Especialidad", _format: item => item.Especialidad);
    grid.columnCollection.addColumn(_headerText: "Usuario", _filterKey: "S_PostulanteNombre", _format: item => item.PostulanteNombre);
    grid.columnCollection.addColumn(_headerText: "Email", _filterKey: "S_PostulanteEmail", _format: item => item.PostulanteEmail);
    grid.columnCollection.addColumn(_headerText: "Contacto", _filterKey: "S_PostulanteNumeroContacto1", _format: item => item.PostulanteNumeroContacto1);
    grid.columnCollection.addColumn(_headerText: "Acciones", _isFilterable: false, _isSortable: false, _format:
@<text>
<div class="acciones_grilla">
    @*<span style="display:none">@item.IDCategoria</span>*@
    @*<span style="display:none">@item.IDEspecialidad</span>*@
    <span style="display:none">@Html.Raw(item.Requisitos.Replace(Environment.NewLine, "<br />").Replace("\r", "<br />").Replace("\n", "<br />"))</span>
    <span style="display:none">@Html.Raw(item.NivelAcademico.Replace(Environment.NewLine, "<br />").Replace("\r", "<br />").Replace("\n", "<br />"))</span>
    <span style="display:none">@Html.Raw(item.PostulaEn.Replace(Environment.NewLine, "<br />").Replace("\r", "<br />").Replace("\n", "<br />"))</span>
    @*<a id="lnkEdit" onclick="ModalEditar(this)" style="cursor:pointer" title="Editar" data-value="@item.IDPostulacion">
        <span class="glyphicon glyphicon-pencil"></span>
    </a>
    <a id="lnkDelete" onclick="ConfirmaEliminar(this)" style="cursor:pointer" title="Eliminar" data-value="@item.IDPostulacion">
        <span class="glyphicon glyphicon-trash"></span>
    </a>*@
</div>
</text>, _htmlAttributes: new
{
    @width = "100px"
});
}
@grid.GetHtml()
<script>
    
    function ModalEditar(that) {
        var id = $(that).attr("data-value");
        //
        var idcategoria = that.parentElement.childNodes[1].textContent;
        var idEspecialidad = that.parentElement.childNodes[3].textContent;
        var nivelacademico = that.parentElement.childNodes[5].textContent;
        var postulaen = that.parentElement.childNodes[7].textContent;
        var requisitos = that.parentElement.parentElement.parentElement.cells[2].innerText;
        var estado = that.parentElement.parentElement.parentElement.cells[3].innerText;
        var b_estado = false;
        if (estado == "Activo") { b_estado = true; }

        $('#txtIDPostulacionEditar').val(id);
       // 
        Lista_Categoria_Editar(idcategoria);        
        Lista_Especialidad_Editar(idcategoria, idEspecialidad);
        $('#txtRequisitosEditar').val(requisitos);
        $('#txtNivelAcademicoEditar').val(nivelacademico);
        $('#txtPostulaEnEditar').val(postulaen);

        $('#chkEstadoEditar').prop('checked', b_estado);
        $('#modalEditarPostulacion').modal('show');


    };

</script>



